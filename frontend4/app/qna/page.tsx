"use client"

import { Header } from "@/components/header"
import { Footer } from "@/components/footer"
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"
import { Accordion, AccordionContent, AccordionItem, AccordionTrigger } from "@/components/ui/accordion"
import { Badge } from "@/components/ui/badge"
import { Button } from "@/components/ui/button"
import { Input } from "@/components/ui/input"
import { Heart, Users, Shield, Clock, AlertTriangle, CheckCircle, Phone, Mail, MapPin, Search, HelpCircle, BookOpen, MessageSquare } from "lucide-react"
import { useState } from "react"
import Image from "next/image"

const qnaData = [
  {
    id: "1",
    question: "Ai c√≥ th·ªÉ tham gia hi·∫øn m√°u?",
    answer: `
      ‚Ä¢ T·∫•t c·∫£ m·ªçi ng∆∞·ªùi t·ª´ 18 - 60 tu·ªïi, th·ª±c s·ª± t√¨nh nguy·ªán hi·∫øn m√°u c·ªßa m√¨nh ƒë·ªÉ c·ª©u ch·ªØa ng∆∞·ªùi b·ªánh.
      ‚Ä¢ C√¢n n·∫∑ng √≠t nh·∫•t l√† 45kg ƒë·ªëi v·ªõi ph·ª• n·ªØ, nam gi·ªõi. L∆∞·ª£ng m√°u hi·∫øn m·ªói l·∫ßn kh√¥ng qu√° 9ml/kg c√¢n n·∫∑ng v√† kh√¥ng qu√° 500ml m·ªói l·∫ßn.
      ‚Ä¢ Kh√¥ng b·ªã nhi·ªÖm ho·∫∑c kh√¥ng c√≥ c√°c h√†nh vi l√¢y nhi·ªÖm HIV v√† c√°c b·ªánh l√¢y nhi·ªÖm qua ƒë∆∞·ªùng truy·ªÅn m√°u kh√°c.
      ‚Ä¢ Th·ªùi gian gi·ªØa 2 l·∫ßn hi·∫øn m√°u l√† 12 tu·∫ßn ƒë·ªëi v·ªõi c·∫£ Nam v√† N·ªØ.
      ‚Ä¢ C√≥ gi·∫•y t·ªù t√πy th√¢n.
    `,
    icon: Users,
    category: "ƒêi·ªÅu ki·ªán hi·∫øn m√°u",
  },
  {
    id: "2",
    question: "Ai l√† ng∆∞·ªùi kh√¥ng n√™n hi·∫øn m√°u?",
    answer: `
      ‚Ä¢ Ng∆∞·ªùi ƒë√£ nhi·ªÖm ho·∫∑c ƒë√£ th·ª±c hi·ªán h√†nh vi c√≥ nguy c∆° nhi·ªÖm HIV, vi√™m gan B, vi√™m gan C, v√† c√°c virus l√¢y qua ƒë∆∞·ªùng truy·ªÅn m√°u.
      ‚Ä¢ Ng∆∞·ªùi c√≥ c√°c b·ªánh m√£n t√≠nh: tim m·∫°ch, huy·∫øt √°p, h√¥ h·∫•p, d·∫° d√†y‚Ä¶
    `,
    icon: AlertTriangle,
    category: "ƒêi·ªÅu ki·ªán hi·∫øn m√°u",
  },
  {
    id: "3",
    question: "M√°u c·ªßa t√¥i s·∫Ω ƒë∆∞·ª£c l√†m nh·ªØng x√©t nghi·ªám g√¨?",
    answer: `
      ‚Ä¢ T·∫•t c·∫£ nh·ªØng ƒë∆°n v·ªã m√°u thu ƒë∆∞·ª£c s·∫Ω ƒë∆∞·ª£c ki·ªÉm tra nh√≥m m√°u (h·ªá ABO, h·ªá Rh), HIV, virus vi√™m gan B, virus vi√™m gan C, giang mai, s·ªët r√©t.
      ‚Ä¢ B·∫°n s·∫Ω ƒë∆∞·ª£c th√¥ng b√°o k·∫øt qu·∫£, ƒë∆∞·ª£c gi·ªØ k√≠n v√† ƒë∆∞·ª£c t∆∞ v·∫•n (mi·ªÖn ph√≠) khi ph√°t hi·ªán ra c√°c b·ªánh nhi·ªÖm tr√πng n√≥i tr√™n.
    `,
    icon: Shield,
    category: "X√©t nghi·ªám",
  },
  {
    id: "4",
    question: "M√°u g·ªìm nh·ªØng th√†nh ph·∫ßn v√† ch·ª©c nƒÉng g√¨?",
    answer: `
      M√°u l√† m·ªôt ch·∫•t l·ªèng l∆∞u th√¥ng trong c√°c m·∫°ch m√°u c·ªßa c∆° th·ªÉ, g·ªìm nhi·ªÅu th√†nh ph·∫ßn, m·ªói th√†nh ph·∫ßn l√†m nhi·ªám v·ª• kh√°c nhau:
      ‚Ä¢ H·ªìng c·∫ßu l√†m nhi·ªám v·ª• ch√≠nh l√† v·∫≠n chuy·ªÉn oxy.
      ‚Ä¢ B·∫°ch c·∫ßu l√†m nhi·ªám v·ª• b·∫£o v·ªá c∆° th·ªÉ.
      ‚Ä¢ Ti·ªÉu c·∫ßu tham gia v√†o qu√° tr√¨nh ƒë√¥ng c·∫ßm m√°u.
      ‚Ä¢ Huy·∫øt t∆∞∆°ng: g·ªìm nhi·ªÅu th√†nh ph·∫ßn kh√°c nhau: kh√°ng th·ªÉ, c√°c y·∫øu t·ªë ƒë√¥ng m√°u, c√°c ch·∫•t dinh d∆∞·ª°ng...
    `,
    icon: Heart,
    category: "Ki·∫øn th·ª©c c∆° b·∫£n",
  },
  {
    id: "5",
    question: "T·∫°i sao l·∫°i c√≥ nhi·ªÅu ng∆∞·ªùi c·∫ßn ph·∫£i ƒë∆∞·ª£c truy·ªÅn m√°u?",
    answer: `
      M·ªói gi·ªù c√≥ h√†ng trƒÉm ng∆∞·ªùi b·ªánh c·∫ßn ph·∫£i ƒë∆∞·ª£c truy·ªÅn m√°u v√¨:
      ‚Ä¢ B·ªã m·∫•t m√°u do ch·∫•n th∆∞∆°ng, tai n·∫°n, th·∫£m ho·∫°, xu·∫•t huy·∫øt ti√™u ho√°...
      ‚Ä¢ Do b·ªã c√°c b·ªánh g√¢y thi·∫øu m√°u, ch·∫£y m√°u: ung th∆∞ m√°u, suy tu·ª∑ x∆∞∆°ng, m√°u kh√≥ ƒë√¥ng...
      ‚Ä¢ C√°c ph∆∞∆°ng ph√°p ƒëi·ªÅu tr·ªã hi·ªán ƒë·∫°i c·∫ßn truy·ªÅn nhi·ªÅu m√°u: ph·∫´u thu·∫≠t tim m·∫°ch, gh√©p t·∫°ng...
    `,
    icon: AlertTriangle,
    category: "Nhu c·∫ßu m√°u",
  },
  {
    id: "6",
    question: "Nhu c·∫ßu m√°u ƒëi·ªÅu tr·ªã ·ªü n∆∞·ªõc ta hi·ªán nay?",
    answer: `
      ‚Ä¢ M·ªói nƒÉm n∆∞·ªõc ta c·∫ßn kho·∫£ng 1.800.000 ƒë∆°n v·ªã m√°u ƒëi·ªÅu tr·ªã.
      ‚Ä¢ M√°u c·∫ßn cho ƒëi·ªÅu tr·ªã h·∫±ng ng√†y, cho c·∫•p c·ª©u, cho d·ª± ph√≤ng c√°c th·∫£m h·ªça, tai n·∫°n c·∫ßn truy·ªÅn m√°u v·ªõi s·ªë l∆∞·ª£ng l·ªõn.
      ‚Ä¢ Hi·ªán t·∫°i ch√∫ng ta ƒë√£ ƒë√°p ·ª©ng ƒë∆∞·ª£c kho·∫£ng 54% nhu c·∫ßu m√°u cho ƒëi·ªÅu tr·ªã.
    `,
    icon: Heart,
    category: "Nhu c·∫ßu m√°u",
  },
  {
    id: "7",
    question: "T·∫°i sao khi tham gia hi·∫øn m√°u l·∫°i c·∫ßn ph·∫£i c√≥ gi·∫•y CMND?",
    answer: `
      M·ªói ƒë∆°n v·ªã m√°u ƒë·ªÅu ph·∫£i c√≥ h·ªì s∆°, trong ƒë√≥ c√≥ c√°c th√¥ng tin v·ªÅ ng∆∞·ªùi hi·∫øn m√°u. Theo quy ƒë·ªãnh, ƒë√¢y l√† m·ªôt th·ªß t·ª•c c·∫ßn thi·∫øt trong quy tr√¨nh hi·∫øn m√°u ƒë·ªÉ ƒë·∫£m b·∫£o t√≠nh x√°c th·ª±c th√¥ng tin v·ªÅ ng∆∞·ªùi hi·∫øn m√°u.
    `,
    icon: Shield,
    category: "Th·ªß t·ª•c",
  },
  {
    id: "8",
    question: "Hi·∫øn m√°u nh√¢n ƒë·∫°o c√≥ h·∫°i ƒë·∫øn s·ª©c kho·∫ª kh√¥ng?",
    answer: `
      Hi·∫øn m√°u theo h∆∞·ªõng d·∫´n c·ªßa th·∫ßy thu·ªëc kh√¥ng c√≥ h·∫°i cho s·ª©c kh·ªèe. ƒêi·ªÅu ƒë√≥ ƒë√£ ƒë∆∞·ª£c ch·ª©ng minh b·∫±ng c√°c c∆° s·ªü khoa h·ªçc v√† c∆° s·ªü th·ª±c t·∫ø:

      C∆° s·ªü khoa h·ªçc:
      ‚Ä¢ M√°u c√≥ nhi·ªÅu th√†nh ph·∫ßn, m·ªói th√†nh ph·∫ßn ch·ªâ c√≥ ƒë·ªùi s·ªëng nh·∫•t ƒë·ªãnh v√† lu√¥n lu√¥n ƒë∆∞·ª£c ƒë·ªïi m·ªõi h·∫±ng ng√†y.
      ‚Ä¢ Nhi·ªÅu c√¥ng tr√¨nh nghi√™n c·ª©u ƒë√£ ch·ª©ng minh r·∫±ng, sau khi hi·∫øn m√°u, c√°c ch·ªâ s·ªë m√°u c√≥ thay ƒë·ªïi ch√∫t √≠t nh∆∞ng v·∫´n n·∫±m trong gi·ªõi h·∫°n sinh l√Ω b√¨nh th∆∞·ªùng.

      C∆° s·ªü th·ª±c t·∫ø:
      ‚Ä¢ Th·ª±c t·∫ø ƒë√£ c√≥ h√†ng tri·ªáu ng∆∞·ªùi hi·∫øn m√°u nhi·ªÅu l·∫ßn m√† s·ª©c kh·ªèe v·∫´n ho√†n to√†n t·ªët.
      ‚Ä¢ Tr√™n th·∫ø gi·ªõi c√≥ ng∆∞·ªùi hi·∫øn m√°u tr√™n 400 l·∫ßn. ·ªû Vi·ªát Nam, ng∆∞·ªùi hi·∫øn m√°u nhi·ªÅu l·∫ßn nh·∫•t ƒë√£ hi·∫øn g·∫ßn 100 l·∫ßn, s·ª©c kh·ªèe ho√†n to√†n t·ªët.
    `,
    icon: CheckCircle,
    category: "An to√†n",
  },
  {
    id: "9",
    question: "T√¥i c√≥ th·ªÉ hi·∫øn m√°u sau khi ti√™m v·∫Øc xin Covid-19 kh√¥ng?",
    answer: `
      Khi ti√™m v·∫Øc xin ng·ª´a Covid-19, c√≥ th·ªÉ tham gia hi·∫øn m√°u sau: 7 NG√ÄY, ƒë·ªÉ ƒë·∫£m b·∫£o b·∫°n kh√¥ng b·ªã t√°c d·ª•ng ph·ª• v√† ƒë·∫£m b·∫£o ƒë·ªß s·ª©c kh·ªèe v√†o ng√†y hi·∫øn m√°u.
    `,
    icon: Shield,
    category: "COVID-19",
  },
  {
    id: "10",
    question: "T√¥i b·ªã nhi·ªÖm Covid-19. T√¥i c√≥ th·ªÉ hi·∫øn m√°u sau khi h·ªìi ph·ª•c kh√¥ng?",
    answer: `
      Khi m·∫Øc b·ªánh Covid-19, c√≥ th·ªÉ tham gia hi·∫øn m√°u sau: 14 ng√†y k·ªÉ t·ª´ th·ªùi ƒëi·ªÉm c√≥ k·∫øt qu·∫£ kh·∫≥ng ƒë·ªãnh "√ÇM T√çNH" v·ªõi virus SarS-CoV-2.
    `,
    icon: Shield,
    category: "COVID-19",
  },
]

const categories = [
  { id: "all", name: "T·∫•t c·∫£", icon: BookOpen },
  { id: "ƒêi·ªÅu ki·ªán hi·∫øn m√°u", name: "ƒêi·ªÅu ki·ªán", icon: Users },
  { id: "X√©t nghi·ªám", name: "X√©t nghi·ªám", icon: Shield },
  { id: "An to√†n", name: "An to√†n", icon: CheckCircle },
  { id: "COVID-19", name: "COVID-19", icon: AlertTriangle },
  { id: "Ki·∫øn th·ª©c c∆° b·∫£n", name: "Ki·∫øn th·ª©c", icon: Heart },
]

export default function QnAPage() {
  const [searchQuery, setSearchQuery] = useState("")
  const [selectedCategory, setSelectedCategory] = useState("all")

  const filteredQnA = qnaData.filter((item) => {
    const matchesSearch = item.question.toLowerCase().includes(searchQuery.toLowerCase()) ||
                         item.answer.toLowerCase().includes(searchQuery.toLowerCase())
    const matchesCategory = selectedCategory === "all" || item.category === selectedCategory
    return matchesSearch && matchesCategory
  })

  return (
    <div className="min-h-screen bg-gradient-to-br from-red-50 via-white to-red-50">
      <Header />

      {/* Hero Section */}
      <section className="relative py-24 px-4 overflow-hidden">
        {/* Background Pattern */}
        <div className="absolute inset-0 z-0">
          <div className="w-full h-full bg-gradient-to-br from-red-500/5 via-red-400/10 to-red-600/5"></div>
          <div className="absolute top-10 left-10 w-32 h-32 bg-red-200/20 rounded-full blur-xl"></div>
          <div className="absolute bottom-10 right-10 w-40 h-40 bg-red-300/15 rounded-full blur-2xl"></div>
          <div className="absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-64 h-64 bg-red-100/10 rounded-full blur-3xl"></div>
        </div>
        
        <div className="container mx-auto text-center relative z-10 max-w-5xl">
          {/* Main Icon with Animation */}
          <div className="relative mb-8">
            <div className="inline-flex items-center justify-center w-24 h-24 bg-gradient-to-br from-red-500 via-red-600 to-red-700 rounded-3xl mb-6 shadow-2xl transform hover:scale-105 transition-all duration-300">
              <div className="absolute inset-0 bg-gradient-to-br from-white/20 to-transparent rounded-3xl"></div>
              <HelpCircle className="w-12 h-12 text-white relative z-10" />
            </div>
            {/* Floating Elements */}
            <div className="absolute -top-2 -right-2 w-6 h-6 bg-red-400 rounded-full animate-pulse"></div>
            <div className="absolute -bottom-1 -left-1 w-4 h-4 bg-red-300 rounded-full animate-bounce delay-300"></div>
          </div>
          
          {/* Badge with improved styling */}
          <div className="mb-6">
            <Badge className="bg-gradient-to-r from-red-50 to-red-100 text-red-700 hover:from-red-100 hover:to-red-150 px-6 py-3 text-base font-medium border border-red-200 shadow-sm">
              <span className="mr-2">üí°</span>
              H·ªèi ƒë√°p v·ªÅ hi·∫øn m√°u
            </Badge>
          </div>
          
          {/* Enhanced Title */}
          <h1 className="text-5xl md:text-6xl lg:text-7xl font-bold text-gray-900 mb-8 leading-tight">
            <span className="bg-gradient-to-r from-gray-900 via-gray-800 to-gray-900 bg-clip-text text-transparent">
              C√¢u h·ªèi
            </span>
            <br />
            <span className="bg-gradient-to-r from-red-500 via-red-600 to-red-700 bg-clip-text text-transparent">
              th∆∞·ªùng g·∫∑p
            </span>
          </h1>
          
          {/* Enhanced Description */}
          <div className="max-w-3xl mx-auto mb-10">
            <p className="text-xl md:text-2xl text-gray-600 leading-relaxed font-light">
              T√¨m hi·ªÉu th√¥ng tin chi ti·∫øt v·ªÅ quy tr√¨nh hi·∫øn m√°u, ƒëi·ªÅu ki·ªán tham gia v√† c√°c quy·ªÅn l·ª£i c·ªßa ng∆∞·ªùi hi·∫øn m√°u
            </p>
            <div className="flex items-center justify-center mt-4 space-x-6 text-sm text-gray-500">
              <div className="flex items-center">
                <CheckCircle className="w-4 h-4 text-green-500 mr-1" />
                Th√¥ng tin ch√≠nh x√°c
              </div>
              <div className="flex items-center">
                <Shield className="w-4 h-4 text-blue-500 mr-1" />
                ƒê∆∞·ª£c x√°c minh y khoa
              </div>
              <div className="flex items-center">
                <Heart className="w-4 h-4 text-red-500 mr-1" />
                C·∫≠p nh·∫≠t li√™n t·ª•c
              </div>
            </div>
          </div>

          {/* Enhanced Search Bar */}
          <div className="relative max-w-xl mx-auto mb-10">
            <div className="absolute inset-0 bg-gradient-to-r from-red-500/20 to-red-600/20 rounded-2xl blur-lg"></div>
            <div className="relative bg-white/90 backdrop-blur-sm rounded-2xl border border-red-200/50 shadow-xl">
              <Search className="absolute left-5 top-1/2 transform -translate-y-1/2 text-red-400 w-6 h-6" />
              <Input
                type="text"
                placeholder="T√¨m ki·∫øm c√¢u h·ªèi c·ªßa b·∫°n..."
                value={searchQuery}
                onChange={(e) => setSearchQuery(e.target.value)}
                className="pl-14 pr-6 py-4 text-lg border-0 bg-transparent focus:ring-2 focus:ring-red-500/20 rounded-2xl placeholder:text-gray-400"
              />
            </div>
          </div>

          {/* Enhanced Category Filter */}
          <div className="flex flex-wrap justify-center gap-3 mb-8">
            {categories.map((category) => {
              const Icon = category.icon
              return (
                <Button
                  key={category.id}
                  variant={selectedCategory === category.id ? "default" : "outline"}
                  onClick={() => setSelectedCategory(category.id)}
                  className={`group relative rounded-2xl px-5 py-3 transition-all duration-300 font-medium ${
                    selectedCategory === category.id
                      ? "bg-gradient-to-r from-red-500 to-red-600 text-white shadow-xl shadow-red-500/25 scale-105 border-0"
                      : "border-2 border-red-200/60 text-red-600 hover:bg-red-50 hover:border-red-300 hover:shadow-lg bg-white/70 backdrop-blur-sm"
                  }`}
                >
                  <div className="flex items-center space-x-2">
                    <Icon className={`w-4 h-4 transition-transform duration-300 ${
                      selectedCategory === category.id ? "scale-110" : "group-hover:scale-110"
                    }`} />
                    <span>{category.name}</span>
                  </div>
                  {selectedCategory === category.id && (
                    <div className="absolute inset-0 bg-gradient-to-r from-white/20 to-transparent rounded-2xl"></div>
                  )}
                </Button>
              )
            })}
          </div>

          {/* Statistics Banner */}
          <div className="max-w-4xl mx-auto">
            <div className="bg-white/80 backdrop-blur-sm rounded-3xl border border-red-100 shadow-xl p-6">
              <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
                <div className="text-center">
                  <div className="w-12 h-12 bg-gradient-to-r from-red-500 to-red-600 rounded-xl flex items-center justify-center mx-auto mb-3">
                    <BookOpen className="w-6 h-6 text-white" />
                  </div>
                  <div className="text-3xl font-bold text-red-600 mb-1">{qnaData.length}</div>
                  <div className="text-sm text-gray-600 font-medium">C√¢u h·ªèi th∆∞·ªùng g·∫∑p</div>
                </div>
                <div className="text-center">
                  <div className="w-12 h-12 bg-gradient-to-r from-blue-500 to-blue-600 rounded-xl flex items-center justify-center mx-auto mb-3">
                    <Users className="w-6 h-6 text-white" />
                  </div>
                  <div className="text-3xl font-bold text-blue-600 mb-1">1.8M</div>
                  <div className="text-sm text-gray-600 font-medium">Nhu c·∫ßu ƒë∆°n v·ªã m√°u/nƒÉm</div>
                </div>
                <div className="text-center">
                  <div className="w-12 h-12 bg-gradient-to-r from-green-500 to-green-600 rounded-xl flex items-center justify-center mx-auto mb-3">
                    <Heart className="w-6 h-6 text-white" />
                  </div>
                  <div className="text-3xl font-bold text-green-600 mb-1">24/7</div>
                  <div className="text-sm text-gray-600 font-medium">H·ªó tr·ª£ kh·∫©n c·∫•p</div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </section>

      {/* Main Content */}
      <section className="py-16 px-4">
        <div className="container mx-auto max-w-6xl">
          <div className="grid lg:grid-cols-4 gap-8">
            {/* Sidebar */}
            <div className="lg:col-span-1">
              <div className="sticky top-24 space-y-6">
                {/* Quick Stats */}
                <Card className="bg-white/80 backdrop-blur-sm border-red-100 shadow-lg">
                  <CardHeader className="pb-3">
                    <CardTitle className="text-lg font-semibold text-red-700 flex items-center">
                      <MessageSquare className="w-5 h-5 mr-2" />
                      Th·ªëng k√™
                    </CardTitle>
                  </CardHeader>
                  <CardContent className="space-y-4">
                    <div className="text-center">
                      <div className="text-3xl font-bold text-red-600">{qnaData.length}</div>
                      <div className="text-sm text-gray-600">C√¢u h·ªèi</div>
                    </div>
                    <div className="text-center">
                      <div className="text-3xl font-bold text-green-600">{filteredQnA.length}</div>
                      <div className="text-sm text-gray-600">K·∫øt qu·∫£ t√¨m ki·∫øm</div>
                    </div>
                  </CardContent>
                </Card>

                {/* Contact Info */}
                <Card className="bg-white/80 backdrop-blur-sm border-red-100 shadow-lg">
                  <CardHeader className="pb-3">
                    <CardTitle className="text-lg font-semibold text-red-700">Li√™n h·ªá h·ªó tr·ª£</CardTitle>
                  </CardHeader>
                  <CardContent className="space-y-4">
                    <div className="flex items-start space-x-3">
                      <Phone className="w-5 h-5 text-red-600 mt-0.5" />
                      <div>
                        <p className="font-medium text-gray-900">Hotline 24/7</p>
                        <p className="text-sm text-gray-600">1900 1234</p>
                      </div>
                    </div>
                    <div className="flex items-start space-x-3">
                      <Mail className="w-5 h-5 text-red-600 mt-0.5" />
                      <div>
                        <p className="font-medium text-gray-900">Email</p>
                        <p className="text-sm text-gray-600">support@scarletblood.vn</p>
                      </div>
                    </div>
                    <div className="flex items-start space-x-3">
                      <MapPin className="w-5 h-5 text-red-600 mt-0.5" />
                      <div>
                        <p className="font-medium text-gray-900">ƒê·ªãa ch·ªâ</p>
                        <p className="text-sm text-gray-600">123 ƒê∆∞·ªùng ABC, Qu·∫≠n 1, TP.HCM</p>
                      </div>
                    </div>
                  </CardContent>
                </Card>
              </div>
            </div>

            {/* Main Q&A Content */}
            <div className="lg:col-span-3">
              <Card className="bg-white/80 backdrop-blur-sm border-red-100 shadow-lg">
                <CardHeader>
                  <CardTitle className="text-2xl font-bold bg-gradient-to-r from-red-600 to-red-700 bg-clip-text text-transparent">
                    Danh s√°ch c√¢u h·ªèi
                  </CardTitle>
                  <p className="text-gray-600">
                    {filteredQnA.length > 0 
                      ? `T√¨m th·∫•y ${filteredQnA.length} c√¢u h·ªèi${searchQuery ? ` cho "${searchQuery}"` : ""}`
                      : "Kh√¥ng t√¨m th·∫•y c√¢u h·ªèi n√†o ph√π h·ª£p"}
                  </p>
                </CardHeader>
                <CardContent>
                  {filteredQnA.length > 0 ? (
                    <Accordion type="single" collapsible className="space-y-4">
                      {filteredQnA.map((item) => {
                        const IconComponent = item.icon
                        return (
                          <AccordionItem
                            key={item.id}
                            value={item.id}
                            className="border border-red-100 rounded-xl px-6 py-2 bg-gradient-to-r from-white to-red-50/30 hover:shadow-md transition-all duration-200"
                          >
                            <AccordionTrigger className="hover:no-underline py-4">
                              <div className="flex items-start space-x-4 text-left">
                                <div className="w-10 h-10 bg-gradient-to-r from-red-500 to-red-600 rounded-xl flex items-center justify-center flex-shrink-0 mt-1 shadow-sm">
                                  <IconComponent className="w-5 h-5 text-white" />
                                </div>
                                <div className="flex-1">
                                  <h3 className="font-semibold text-gray-900 mb-2 text-lg">{item.question}</h3>
                                  <Badge variant="secondary" className="bg-red-100 text-red-700 hover:bg-red-100">
                                    {item.category}
                                  </Badge>
                                </div>
                              </div>
                            </AccordionTrigger>
                            <AccordionContent className="pb-6">
                              <div className="ml-14 text-gray-700 leading-relaxed">
                                {item.answer.split("\n").map((line, index) => (
                                  <div key={index} className="mb-2">
                                    {line.trim() && (
                                      <p className={`${line.trim().startsWith("‚Ä¢") ? "ml-4 flex items-start" : ""} ${
                                        line.trim().includes(":") && !line.trim().startsWith("‚Ä¢") ? "font-semibold text-gray-900 mt-3 mb-1" : ""
                                      }`}>
                                        {line.trim().startsWith("‚Ä¢") && (
                                          <span className="text-red-500 mr-2 flex-shrink-0">‚Ä¢</span>
                                        )}
                                        <span>{line.trim().replace(/^‚Ä¢\s*/, "")}</span>
                                      </p>
                                    )}
                                  </div>
                                ))}
                              </div>
                            </AccordionContent>
                          </AccordionItem>
                        )
                      })}
                    </Accordion>
                  ) : (
                    <div className="text-center py-12">
                      <div className="w-16 h-16 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-4">
                        <Search className="w-8 h-8 text-gray-400" />
                      </div>
                      <h3 className="text-xl font-semibold text-gray-900 mb-2">Kh√¥ng t√¨m th·∫•y k·∫øt qu·∫£</h3>
                      <p className="text-gray-600 mb-4">Th·ª≠ t√¨m ki·∫øm v·ªõi t·ª´ kh√≥a kh√°c ho·∫∑c ch·ªçn danh m·ª•c kh√°c</p>
                      <Button
                        onClick={() => {
                          setSearchQuery("")
                          setSelectedCategory("all")
                        }}
                        variant="outline"
                        className="border-red-200 text-red-600 hover:bg-red-50"
                      >
                        Xem t·∫•t c·∫£ c√¢u h·ªèi
                      </Button>
                    </div>
                  )}
                </CardContent>
              </Card>
            </div>
          </div>
        </div>
      </section>

      <Footer />
    </div>
  )
}
