"use client"

import api from "../lib/axios";
import { useEffect, useState } from "react"
import { Button } from "@/components/ui/button"
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
import { Badge } from "@/components/ui/badge"
import { Alert, AlertDescription } from "@/components/ui/alert"
import { Heart, Users, MapPin, Clock, Shield, Activity, Phone, Mail, Calendar, CheckCircle } from "lucide-react"
import Link from "next/link"
import { Header } from "@/components/header"
import { getCurrentUser, type User } from "@/lib/auth"
import { useSearchParams } from "next/navigation"
import toast from "react-hot-toast";

export default function HomePage() {
  const [currentUser, setCurrentUser] = useState<User | null>(null)
  const searchParams = useSearchParams()
  const loginSuccess = searchParams.get("login") === "success"
  const [notes, setNotes] = useState([]);
  const [title, setTitle] = useState("");
  const [content, setContent] = useState("");

   const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {
      e.preventDefault();
  
      if (!title.trim() || !content.trim()) {
        toast.error("All fields are required");
        return;
      }
  
      
      try {
        await api.post("/notes", {
          title,
          content,
        });
  
        toast.success("Note created successfully!");
        const tesing = await api.get("/notes");
        console.log(tesing.data);
      } catch (error) {
        console.log("Error creating note", error);
      }
    };

  useEffect(() => {
    setCurrentUser(getCurrentUser())
    const fetchNotes = async () => {
          try {
            const res = await api.get("/notes");
            console.log(res.data);
            setNotes(res.data);
          } catch (error) {
            console.log("Error fetching notes");
            console.log(error);
          }
        };
    
        fetchNotes();
  }, [])

  const bloodTypes = [
    { type: "O-", compatibility: "Ng∆∞·ªùi hi·∫øn v·∫°n nƒÉng", color: "bg-red-500" },
    { type: "O+", compatibility: "Hi·∫øn cho O+, A+, B+, AB+", color: "bg-red-400" },
    { type: "A-", compatibility: "Hi·∫øn cho A-, A+, AB-, AB+", color: "bg-blue-500" },
    { type: "A+", compatibility: "Hi·∫øn cho A+, AB+", color: "bg-blue-400" },
    { type: "B-", compatibility: "Hi·∫øn cho B-, B+, AB-, AB+", color: "bg-green-500" },
    { type: "B+", compatibility: "Hi·∫øn cho B+, AB+", color: "bg-green-400" },
    { type: "AB-", compatibility: "Hi·∫øn cho AB-, AB+", color: "bg-purple-500" },
    { type: "AB+", compatibility: "Ng∆∞·ªùi nh·∫≠n v·∫°n nƒÉng", color: "bg-purple-400" },
  ]

  const features = [
    {
      icon: Users,
      title: "ƒêƒÉng k√Ω hi·∫øn m√°u",
      description: "ƒêƒÉng k√Ω th√¥ng tin nh√≥m m√°u v√† l·ªãch tr√¨nh s·∫µn s√†ng hi·∫øn m√°u",
    },
    {
      icon: MapPin,
      title: "T√¨m ki·∫øm theo v·ªã tr√≠",
      description: "K·∫øt n·ªëi ng∆∞·ªùi hi·∫øn v√† ng∆∞·ªùi c·∫ßn m√°u theo kho·∫£ng c√°ch g·∫ßn nh·∫•t",
    },
    {
      icon: Clock,
      title: "Y√™u c·∫ßu kh·∫©n c·∫•p",
      description: "X·ª≠ l√Ω c√°c tr∆∞·ªùng h·ª£p c·∫ßn m√°u kh·∫©n c·∫•p v·ªõi ƒë·ªô ∆∞u ti√™n cao",
    },
    {
      icon: Shield,
      title: "Qu·∫£n l√Ω an to√†n",
      description: "Theo d√µi th·ªùi gian ph·ª•c h·ªìi v√† l·ªãch s·ª≠ hi·∫øn m√°u",
    },
    {
      icon: Activity,
      title: "Theo d√µi kho m√°u",
      description: "Qu·∫£n l√Ω s·ªë l∆∞·ª£ng c√°c ƒë∆°n v·ªã m√°u c√≥ s·∫µn t·∫°i c∆° s·ªü",
    },
    {
      icon: Heart,
      title: "H·ªó tr·ª£ 24/7",
      description: "ƒê·ªôi ng≈© y t·∫ø chuy√™n nghi·ªáp h·ªó tr·ª£ m·ªçi l√∫c",
    },
  ]

  const stats = [
    { number: "2,500+", label: "Ng∆∞·ªùi hi·∫øn m√°u" },
    { number: "15,000+", label: "ƒê∆°n v·ªã m√°u ƒë√£ hi·∫øn" },
    { number: "1,200+", label: "Sinh m·∫°ng ƒë∆∞·ª£c c·ª©u" },
    { number: "24/7", label: "H·ªó tr·ª£ kh·∫©n c·∫•p" },
  ]

  return (
    <div className="min-h-screen bg-gradient-to-b from-red-50 to-white">
      <Header />

      {/* Login Success Alert */}
      {loginSuccess && (
        <div className="container mx-auto px-4 pt-4">
          <Alert className="border-green-200 bg-green-50">
            <CheckCircle className="h-4 w-4 text-green-600" />
            <AlertDescription className="text-green-800">
              ƒêƒÉng nh·∫≠p th√†nh c√¥ng! Ch√†o m·ª´ng b·∫°n ƒë·∫øn v·ªõi BloodConnect.
            </AlertDescription>
          </Alert>
        </div>
      )}

      {/* Hero Section */}
      <section className="py-20 px-4">
        <div className="container mx-auto text-center">
          <div className="max-w-4xl mx-auto">
            {currentUser && (
              <div className="mb-6">
                <Badge className="bg-green-100 text-green-800 hover:bg-green-100">
                  üëã Xin ch√†o, {currentUser.name}!
                </Badge>
              </div>
            )}
            <Badge className="mb-4 bg-red-100 text-red-800 hover:bg-red-100">
              ü©∏ C·ª©u s·ªëng m·ªôt sinh m·∫°ng ch·ªâ v·ªõi m·ªôt gi·ªçt m√°u
            </Badge>
            <h1 className="text-5xl md:text-6xl font-bold text-gray-900 mb-6">
              K·∫øt n·ªëi <span className="text-red-600">tr√°i tim</span>,
              <br />
              c·ª©u s·ªëng <span className="text-red-600">sinh m·∫°ng</span>
            </h1>
            <p className="text-xl text-gray-600 mb-8 max-w-2xl mx-auto">
              H·ªá th·ªëng qu·∫£n l√Ω hi·∫øn m√°u hi·ªán ƒë·∫°i, k·∫øt n·ªëi ng∆∞·ªùi hi·∫øn m√°u v√† ng∆∞·ªùi c·∫ßn m√°u m·ªôt c√°ch nhanh ch√≥ng, an to√†n
              v√† hi·ªáu qu·∫£.
            </p>
            <div className="flex flex-col sm:flex-row gap-4 justify-center">
              {currentUser ? (
                <>
                  <Button size="lg" className="bg-red-600 hover:bg-red-700" asChild>
                    <Link href="/donate">
                      <Heart className="w-5 h-5 mr-2" />
                      ƒêƒÉng k√Ω hi·∫øn m√°u
                    </Link>
                  </Button>
                  <Button size="lg" variant="outline" asChild>
                    <Link href={currentUser.role === "admin" ? "/admin/dashboard" : "/user/dashboard"}>
                      <Activity className="w-5 h-5 mr-2" />
                      Xem Dashboard
                    </Link>
                  </Button>
                </>
              ) : (
                <>
                  <Button size="lg" className="bg-red-600 hover:bg-red-700" asChild>
                    <Link href="/register">
                      <Heart className="w-5 h-5 mr-2" />
                      ƒêƒÉng k√Ω hi·∫øn m√°u
                    </Link>
                  </Button>
                  <Button size="lg" variant="outline" asChild>
                    <Link href="/request">
                      <Users className="w-5 h-5 mr-2" />
                      T√¨m ng∆∞·ªùi hi·∫øn m√°u
                    </Link>
                  </Button>
                </>
              )}
            </div>
          </div>
        </div>
      </section>

      {/* Stats Section */}
      <section className="py-16 bg-red-600 text-white">
        <div className="container mx-auto px-4">
          <div className="grid grid-cols-2 md:grid-cols-4 gap-8">
            {stats.map((stat, index) => (
              <div key={index} className="text-center">
                <div className="text-3xl md:text-4xl font-bold mb-2">{stat.number}</div>
                <div className="text-red-100">{stat.label}</div>
              </div>
            ))}
          </div>
        </div>
      </section>

      {/* User Welcome Section */}
      {currentUser && (
        <section className="py-16 px-4 bg-blue-50">
          <div className="container mx-auto">
            <div className="max-w-4xl mx-auto text-center">
              <h2 className="text-3xl font-bold text-gray-900 mb-6">
                Ch√†o m·ª´ng {currentUser.role === "admin" ? "Qu·∫£n tr·ªã vi√™n" : "Ng∆∞·ªùi hi·∫øn m√°u"} {currentUser.name}!
              </h2>
              <div className="grid md:grid-cols-3 gap-6">
                <Card className="hover:shadow-lg transition-shadow">
                  <CardHeader>
                    <CardTitle className="flex items-center">
                      <Heart className="w-5 h-5 mr-2 text-red-600" />
                      {currentUser.role === "admin" ? "Qu·∫£n l√Ω h·ªá th·ªëng" : "Th√¥ng tin c√° nh√¢n"}
                    </CardTitle>
                  </CardHeader>
                  <CardContent>
                    {currentUser.role === "admin" ? (
                      <p className="text-gray-600">Qu·∫£n l√Ω ng∆∞·ªùi d√πng, kho m√°u v√† y√™u c·∫ßu kh·∫©n c·∫•p</p>
                    ) : (
                      <div className="space-y-2">
                        <p className="text-gray-600">
                          Nh√≥m m√°u: <strong>{currentUser.bloodType}</strong>
                        </p>
                        <p className="text-gray-600">
                          T·ªïng l·∫ßn hi·∫øn: <strong>{currentUser.totalDonations || 0}</strong>
                        </p>
                      </div>
                    )}
                  </CardContent>
                </Card>

                <Card className="hover:shadow-lg transition-shadow">
                  <CardHeader>
                    <CardTitle className="flex items-center">
                      <Activity className="w-5 h-5 mr-2 text-blue-600" />
                      Dashboard
                    </CardTitle>
                  </CardHeader>
                  <CardContent>
                    <p className="text-gray-600 mb-4">
                      {currentUser.role === "admin"
                        ? "Xem th·ªëng k√™ v√† qu·∫£n l√Ω h·ªá th·ªëng"
                        : "Theo d√µi l·ªãch s·ª≠ v√† ƒë·∫∑t l·ªãch h·∫πn"}
                    </p>
                    <Button asChild className="w-full">
                      <Link href={currentUser.role === "admin" ? "/admin/dashboard" : "/user/dashboard"}>
                        M·ªü Dashboard
                      </Link>
                    </Button>
                  </CardContent>
                </Card>

                <Card className="hover:shadow-lg transition-shadow">
                  <CardHeader>
                    <CardTitle className="flex items-center">
                      <Clock className="w-5 h-5 mr-2 text-green-600" />
                      H√†nh ƒë·ªông nhanh
                    </CardTitle>
                  </CardHeader>
                  <CardContent>
                    <div className="space-y-2">
                      {currentUser.role === "admin" ? (
                        <>
                          <Button variant="outline" size="sm" className="w-full" asChild>
                            <Link href="/emergency">Xem y√™u c·∫ßu kh·∫©n c·∫•p</Link>
                          </Button>
                          <Button variant="outline" size="sm" className="w-full" asChild>
                            <Link href="/admin/users">Qu·∫£n l√Ω ng∆∞·ªùi d√πng</Link>
                          </Button>
                        </>
                      ) : (
                        <>
                          <Button variant="outline" size="sm" className="w-full" asChild>
                            <Link href="/donate">ƒêƒÉng k√Ω hi·∫øn m√°u</Link>
                          </Button>
                          <Button variant="outline" size="sm" className="w-full" asChild>
                            <Link href="/emergency">Y√™u c·∫ßu kh·∫©n c·∫•p</Link>
                          </Button>
                        </>
                      )}
                    </div>
                  </CardContent>
                </Card>
              </div>
            </div>
          </div>
        </section>
      )}

      {/* Blood Types Section */}
      <section className="py-20 px-4">
        <div className="container mx-auto">
          <div className="text-center mb-12">
            <h2 className="text-3xl md:text-4xl font-bold text-gray-900 mb-4">Th√¥ng tin nh√≥m m√°u</h2>
            <p className="text-xl text-gray-600 max-w-2xl mx-auto">
              Hi·ªÉu r√µ v·ªÅ c√°c nh√≥m m√°u v√† kh·∫£ nƒÉng t∆∞∆°ng th√≠ch ƒë·ªÉ hi·∫øn m√°u hi·ªáu qu·∫£ nh·∫•t
            </p>
          </div>
          <div className="grid grid-cols-2 md:grid-cols-4 gap-4">
            {bloodTypes.map((blood, index) => (
              <Card key={index} className="hover:shadow-lg transition-shadow">
                <CardHeader className="text-center pb-2">
                  <div
                    className={`w-16 h-16 ${blood.color} rounded-full flex items-center justify-center mx-auto mb-2`}
                  >
                    <span className="text-2xl font-bold text-white">{blood.type}</span>
                  </div>
                  <CardTitle className="text-lg">{blood.type}</CardTitle>
                </CardHeader>
                <CardContent>
                  <p className="text-sm text-gray-600 text-center">{blood.compatibility}</p>
                </CardContent>
              </Card>
            ))}
          </div>
        </div>
      </section>

      {/* Features Section */}
      <section className="py-20 px-4 bg-gray-50">
        <div className="container mx-auto">
          <div className="text-center mb-12">
            <h2 className="text-3xl md:text-4xl font-bold text-gray-900 mb-4">T√≠nh nƒÉng n·ªïi b·∫≠t</h2>
            <p className="text-xl text-gray-600 max-w-2xl mx-auto">
              H·ªá th·ªëng qu·∫£n l√Ω hi·∫øn m√°u to√†n di·ªán v·ªõi c√°c t√≠nh nƒÉng hi·ªán ƒë·∫°i
            </p>
          </div>
          <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
            {features.map((feature, index) => (
              <Card key={index} className="hover:shadow-lg transition-shadow">
                <CardHeader>
                  <div className="w-12 h-12 bg-red-100 rounded-lg flex items-center justify-center mb-4">
                    <feature.icon className="w-6 h-6 text-red-600" />
                  </div>
                  <CardTitle className="text-xl">{feature.title}</CardTitle>
                </CardHeader>
                <CardContent>
                  <CardDescription className="text-gray-600">{feature.description}</CardDescription>
                </CardContent>
              </Card>
            ))}
          </div>
        </div>
      </section>

      {/* Emergency Section */}
      <section className="py-20 px-4 bg-red-600 text-white">
        <div className="container mx-auto text-center">
          <div className="max-w-3xl mx-auto">
            <h2 className="text-3xl md:text-4xl font-bold mb-6">Tr∆∞·ªùng h·ª£p kh·∫©n c·∫•p?</h2>
            <p className="text-xl text-red-100 mb-8">
              Ch√∫ng t√¥i s·∫µn s√†ng h·ªó tr·ª£ 24/7 cho c√°c tr∆∞·ªùng h·ª£p c·∫ßn m√°u kh·∫©n c·∫•p
            </p>
            <div className="flex flex-col sm:flex-row gap-4 justify-center">
              <Button size="lg" variant="secondary" asChild>
                <Link href="/emergency">
                  <Phone className="w-5 h-5 mr-2" />
                  G·ªçi kh·∫©n c·∫•p: 1900-1234
                </Link>
              </Button>
              <Button
                size="lg"
                variant="outline"
                className="border-white text-white hover:bg-white hover:text-red-600"
                asChild
              >
                <Link href="/emergency">
                  <Calendar className="w-5 h-5 mr-2" />
                  ƒêƒÉng k√Ω y√™u c·∫ßu kh·∫©n c·∫•p
                </Link>
              </Button>
            </div>
          </div>
        </div>
      </section>

      {/* Contact Section */}
      <section className="py-20 px-4">
        <div className="container mx-auto">
          <div className="grid md:grid-cols-2 gap-12 items-center">
            <div>
              <h2 className="text-3xl md:text-4xl font-bold text-gray-900 mb-6">Li√™n h·ªá v·ªõi ch√∫ng t√¥i</h2>
              <p className="text-xl text-gray-600 mb-8">
                ƒê·ªôi ng≈© chuy√™n gia y t·∫ø c·ªßa ch√∫ng t√¥i lu√¥n s·∫µn s√†ng h·ªó tr·ª£ b·∫°n
              </p>
              <div className="space-y-4">
                <div className="flex items-center space-x-3">
                  <Phone className="w-5 h-5 text-red-600" />
                  <span>Hotline: 1900-1234 (24/7)</span>
                </div>
                <div className="flex items-center space-x-3">
                  <Mail className="w-5 h-5 text-red-600" />
                  <span>Email: info@bloodconnect.vn</span>
                </div>
                <div className="flex items-center space-x-3">
                  <MapPin className="w-5 h-5 text-red-600" />
                  <span>123 ƒê∆∞·ªùng ABC, Qu·∫≠n 1, TP.HCM</span>
                </div>
              </div>
            </div>
            <div className="bg-gray-100 rounded-lg p-8">
              <h3 className="text-2xl font-bold text-gray-900 mb-6">G·ª≠i tin nh·∫Øn</h3>
              <form className="space-y-4" onSubmit={handleSubmit}>
                <div>
                  <input
                    type="text"
                    placeholder="H·ªç v√† t√™n"
                    className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-red-500 focus:border-transparent"
                    value={title}
                    onChange={(e) => setTitle(e.target.value)}
                  />
                </div>
                <div>
                  <input
                    type="email"
                    placeholder="Email"
                    className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-red-500 focus:border-transparent"
                  />
                </div>
                <div>
                  <textarea
                    placeholder="Tin nh·∫Øn"
                    rows={4}
                    className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-red-500 focus:border-transparent"
                    value={content}
                    onChange={(e) => setContent(e.target.value)}
                  />
                </div>
                <Button className="w-full bg-red-600 hover:bg-red-700">G·ª≠i tin nh·∫Øn</Button>
              </form>
            </div>
          </div>
        </div>
      </section>

      {/* Footer */}
      <footer className="bg-gray-900 text-white py-12">
        <div className="container mx-auto px-4">
          <div className="grid md:grid-cols-4 gap-8">
            <div>
              <div className="flex items-center space-x-2 mb-4">
                <div className="w-8 h-8 bg-red-500 rounded-full flex items-center justify-center">
                  <Heart className="w-5 h-5 text-white" />
                </div>
                <span className="text-xl font-bold">BloodConnect</span>
              </div>
              <p className="text-gray-400">
                K·∫øt n·ªëi tr√°i tim, c·ª©u s·ªëng sinh m·∫°ng. H·ªá th·ªëng qu·∫£n l√Ω hi·∫øn m√°u hi·ªán ƒë·∫°i v√† an to√†n.
              </p>
            </div>
            <div>
              <h4 className="text-lg font-semibold mb-4">D·ªãch v·ª•</h4>
              <ul className="space-y-2 text-gray-400">
                <li>
                  <Link href="/donate" className="hover:text-white">
                    ƒêƒÉng k√Ω hi·∫øn m√°u
                  </Link>
                </li>
                <li>
                  <Link href="/request" className="hover:text-white">
                    T√¨m ng∆∞·ªùi hi·∫øn m√°u
                  </Link>
                </li>
                <li>
                  <Link href="/emergency" className="hover:text-white">
                    Y√™u c·∫ßu kh·∫©n c·∫•p
                  </Link>
                </li>
                {currentUser && (
                  <li>
                    <Link
                      href={currentUser.role === "admin" ? "/admin/dashboard" : "/user/dashboard"}
                      className="hover:text-white"
                    >
                      Dashboard
                    </Link>
                  </li>
                )}
              </ul>
            </div>
            <div>
              <h4 className="text-lg font-semibold mb-4">Th√¥ng tin</h4>
              <ul className="space-y-2 text-gray-400">
                <li>
                  <Link href="/blog" className="hover:text-white">
                    Blog
                  </Link>
                </li>
                <li>
                  <Link href="/about" className="hover:text-white">
                    V·ªÅ ch√∫ng t√¥i
                  </Link>
                </li>
                <li>
                  <Link href="/contact" className="hover:text-white">
                    Li√™n h·ªá
                  </Link>
                </li>
                <li>
                  <Link href="/privacy" className="hover:text-white">
                    Ch√≠nh s√°ch b·∫£o m·∫≠t
                  </Link>
                </li>
              </ul>
            </div>
            <div>
              <h4 className="text-lg font-semibold mb-4">Li√™n h·ªá</h4>
              <div className="space-y-2 text-gray-400">
                <p>üìû 1900-1234</p>
                <p>‚úâÔ∏è info@bloodconnect.vn</p>
                <p>üìç 123 ƒê∆∞·ªùng ABC, Qu·∫≠n 1, TP.HCM</p>
              </div>
            </div>
          </div>
          <div className="border-t border-gray-800 mt-8 pt-8 text-center text-gray-400">
            <p>&copy; 2024 BloodConnect. T·∫•t c·∫£ quy·ªÅn ƒë∆∞·ª£c b·∫£o l∆∞u.</p>
          </div>
        </div>
      </footer>
    </div>
  )
}
